% Generated by roxygen2 (4.0.2): do not edit by hand
\name{es_flush}
\alias{es_flush}
\title{Explicitly flush one or more indices.}
\usage{
es_flush(index = NULL, force = FALSE, full = FALSE,
  wait_if_ongoing = FALSE, callopts = list())
}
\arguments{
\item{index}{The name of the index to scope the operation}

\item{force}{(logical) Whether a flush should be forced even if it is not necessarily needed
ie. if no changes will be committed to the index.}

\item{full}{(logical) If set to TRUE a new index writer is created and settings that have been
changed related to the index writer will be refreshed.}

\item{wait_if_ongoing}{If TRUE, the flush operation will block until the flush can be executed
if another flush operation is already executing. The default is false and will cause an
exception to be thrown on the shard level if another flush operation is already running.
[1.4.0.Beta1]}

\item{callopts}{Curl args passed on to httr::POST.}
}
\description{
Explicitly flush one or more indices.
}
\details{
From the ES website:
The flush process of an index basically frees memory from the index by flushing data to the
index storage and clearing the internal transaction log. By default, Elasticsearch uses memory
heuristics in order to automatically trigger flush operations as required in order to clear
memory.
}
\examples{
\donttest{
es_flush()
es_flush(index = "plos")
es_flush(index = "shakespeare")
es_flush(index = c("plos","shakespeare"))
es_flush(wait_if_ongoing = TRUE)
library('httr')
es_flush(callopts=verbose())
}
}
\references{
\url{http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-flush.html}
}

